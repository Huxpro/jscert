* The filters applied by OnlyInteresting

#+begin_src sql
  SELECT id,test_id,batch_id,status, stdout,stderr from single_test_runs where batch_id = 47 AND
                                        -- Not boring arithmetic errors https://gforge.inria.fr/tracker/index.php?func=detail&aid=15848&group_id=4179&atid=13867
                                        -- Alan fixed this one ++ "test_id NOT IN (select test_id from test_group_memberships where group_id = 5) AND "
                                        -- Not tests that use the Number object
                                        -- ++ "test_id NOT IN (select test_id from test_group_memberships where group_id IN "
                                        -- ++   "(SELECT id from test_groups where description="Number object tests")) AND "
                                        -- -- Not tests that use the Number constructor
                                        -- ++ "test_id NOT IN (select test_id from test_group_memberships where group_id IN "
                                        -- ++   "(SELECT id from test_groups where description="Number constructor object tests")) AND "
                                        -- Not tests that use the Boolean constructor
                                        -- ++ "test_id NOT IN (select test_id from test_group_memberships where group_id IN "
                                        -- ++   "(SELECT id from test_groups where description="Boolean constructor object tests")) AND "
                        -- Not tests that use the String constructor
   test_id NOT IN (select test_id from test_group_memberships where group_id IN
   (SELECT id from test_groups where description="String constructor object tests")) AND
                        -- Not tests that use the String object
   test_id NOT IN (select test_id from test_group_memberships where group_id IN
   (SELECT id from test_groups where description="String object tests")) AND
                                        -- -- Not known type conversion bug https://gforge.inria.fr/tracker/index.php?func=detail&aid=15904&group_id=4179&atid=13867
                                        -- test_id NOT IN (select test_id from test_group_memberships where group_id IN
                                        -- (SELECT id from test_groups where description="ToNumber conversion tests")) AND
                        -- Not Intl object tests
   test_id NOT IN (select test_id from test_group_memberships where group_id IN
   (SELECT id from test_groups where description="Intl object tests")) AND
                        -- Not tests that require strict mode
   test_id NOT IN (select test_id from test_group_memberships where group_id IN
   (SELECT id from test_groups where description="Tests that only work in strict mode")) AND
                        -- Not tests that both fail, and use Number.tostring
   ( NOT ((status="FAIL" OR status="ABORT") AND stderr LIKE "%JsNumber.to_string called.%" )) AND
                        -- Not tests that we've explicitly noted as "Ignorable"
   test_id NOT IN (select test_id from test_group_memberships where group_id IN (SELECT id from test_groups where description LIKE "Ignorable%")) AND
                        -- Not buggy tests
   test_id NOT IN (select test_id from fail_group_memberships where group_id IN (SELECT id from fail_groups where reason LIKE "%Buggy Test%")) AND
                        -- Only tests from Test262
   test_id IN (select test_id from test_group_memberships where group_id IN (SELECT id from test_groups where description="Test262 Tests")) AND
   id NOT IN (select id from single_test_runs where stdout LIKE "%Translation of Javascript syntax does not support%" AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stdout LIKE "%Not implemented code%"                              AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stdout LIKE "%Parsing problem with the file%"                     AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stdout LIKE "%Stuck:  this is not implemented yet!%"              AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stdout LIKE "%NYI:  this is not implemented yet!%"                AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Fatal error: exception Parser.%"                                               AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . parseInt%"           AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . Math%"               AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . length%"             AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . Array%"              AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . hasOwnProperty%"     AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . call%"               AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . JSON%"               AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . parseFloat%"         AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . decodeURIComponent%" AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . URIError%"           AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . encodeURIComponent%" AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . decodeURI%"          AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . encodeURI%"          AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . Date%"               AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . RegExp%"             AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . apply%"              AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . bind%"               AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . indexOf%"            AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . match%"              AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . charAt%"             AND batch_id=47) AND
   id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . keys%"               AND batch_id=47);
#+end_src

#+begin_src sql
  SELECT id,test_id,batch_id,status, stdout,stderr from single_test_runs where (batch_id = 47 AND
   (test_id NOT IN (select test_id from test_group_memberships where group_id IN (SELECT id from test_groups where description="String constructor object tests"))) AND
   (test_id NOT IN (select test_id from test_group_memberships where group_id IN (SELECT id from test_groups where description="String object tests"))) AND
   (test_id NOT IN (select test_id from test_group_memberships where group_id IN (SELECT id from test_groups where description="Intl object tests"))) AND
   (test_id NOT IN (select test_id from test_group_memberships where group_id IN (SELECT id from test_groups where description="Tests that only work in strict mode"))) AND
   ( NOT ((status="FAIL" OR status="ABORT") AND stderr LIKE "%JsNumber.to_string called.%" )) AND
   (test_id NOT IN (select test_id from test_group_memberships where group_id IN (SELECT id from test_groups where description LIKE "Ignorable%"))) AND
   (test_id NOT IN (select test_id from fail_group_memberships where group_id IN (SELECT id from fail_groups where reason LIKE "%Buggy Test%"))) AND
   (test_id IN (select test_id from test_group_memberships where group_id IN (SELECT id from test_groups where description="Test262 Tests"))) AND
   (id NOT IN (select id from single_test_runs where stdout LIKE "%Translation of Javascript syntax does not support%" AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stdout LIKE "%Not implemented code%"                              AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stdout LIKE "%Parsing problem with the file%"                     AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stdout LIKE "%Stuck:  this is not implemented yet!%"              AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stdout LIKE "%NYI:  this is not implemented yet!%"                AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Fatal error: exception Parser.%"                                               AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . parseInt%"           AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . Math%"               AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . length%"             AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . Array%"              AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . hasOwnProperty%"     AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . call%"               AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . JSON%"               AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . parseFloat%"         AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . decodeURIComponent%" AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . URIError%"           AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . encodeURIComponent%" AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . decodeURI%"          AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . encodeURI%"          AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . Date%"               AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . RegExp%"             AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . apply%"              AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . bind%"               AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . indexOf%"            AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . match%"              AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . charAt%"             AND batch_id=47)) AND
   (id NOT IN (select id from single_test_runs where stderr LIKE "%Warning: ref_get_value returns the undefined value on % . keys%"               AND batch_id=47)));
#+end_src

* Getting some numbers

** Number of test262 tests

   
#+begin_src sql
SELECT count(*) FROM (SELECT group_id FROM test_group_memberships WHERE group_id=19);
#+end_src

   11746

** Number of things we explicitly ignore for one reason or another.

#+begin_src sql
  SELECT COUNT(*) from (SELECT * from test_group_memberships WHERE group_id IN (SELECT id from test_groups where description LIKE "Ignorable%"));
#+end_src

  805

** Tests that fail because of test bugs
   1
** Tests that we explicitly ignore because of parser issues

   
#+begin_src sql
SELECT count(*) FROM (SELECT * FROM test_group_memberships WHERE group_id IN (SELECT id FROM test_groups WHERE description LIKE "Ignorable:%parser%" OR description LIKE "Ignorable:%Parser%"));
#+end_src

   16

** Summing it up

   | Group                        | number |
   |------------------------------+--------|
   | All Test262                  |  11746 |
   | Passes                       |   2229 |
   | Fails because of test bugs   |      1 |
   | Fails because of parser bugs |     16 |
   | The rest                     |   9501 |
   #+TBLFM: @6$2=@2-@3-@5

* S5 results



** All interesting test262 tests we pass
,----
| gds@lithium:~/Documents/jscert/src/core/trunk$ time ./runtests.py --lambdaS5 --interp_path ~/Documents/data/LambdaS5/tests/s5 --interp_version some --webreport --title S5PassedInterestingTests --note "testing whether S5 can pass all the interesting tests we do" --noindex `cat test_data/passed_interesting_tests.txt` --verbose
| 
| There were 2169 passes, 37  fails, and 23 abandoned.
| 
| real	44m4.946s
| user	40m55.780s
| sys	2m6.324s
`----

That's (+ 37 23) == 60 interesting tests they fail and we don't.


** Unfair S5 tests

*** Everything we pass
,----
| gds@lithium:~/Documents/jscert/src/core/trunk$ time ./runtests.py --lambdaS5 --interp_path ~/Documents/data/LambdaS5/bin/js --interp_version some --webreport --title S5PassedTests --note "testing whether S5 can pass all the tests we do" --noindex `cat test_data/passed_tests.txt` 
| 
| There were 1855 passes, 0  fails, and 1151 abandoned.
| 
| real	0m43.677s
| user	0m10.660s
| sys	0m18.016s
`----

[[file:~/Documents/jscert/web/test_results/report-gds-LambdaS5-S5PassedTests-2013-09-12T004918Z.html][How S5 does on the set of all tests we pass.]]

*** All interesting test262 we pass

,----
| gds@lithium:~/Documents/jscert/src/core/trunk$ time ./runtests.py --lambdaS5 --interp_path ~/Documents/data/LambdaS5/bin/js --interp_version some --webreport --title S5PassedInterestingTests --note "testing whether S5 can pass all the interesting tests we do" --noindex `cat test_data/passed_interesting_tests.txt` 
| 
| There were 1664 passes, 0  fails, and 565 abandoned.
| 
| real	0m30.496s
| user	0m8.564s
| sys	0m13.000s
| gds@lithium:~/Documents/jscert/src/core/trunk$ 
`----

...that ran suspiciously quickly.

Yeah, this isn't a fair test:

,----
| /home/gds/Documents/jscert/src/core/trunk/tests/test262/ch15/15.2/15.2.3/15.2.3.8/15.2.3.8-4-3.js
| Aborted...
| 
| /home/gds/Documents/jscert/src/core/trunk/tests/test262/ch15/15.2/15.2.3/15.2.3.8/15.2.3.8-4-3.js:22: ReferenceError: runTestCase is not defined
| 
| /home/gds/Documents/jscert/src/core/trunk/tests/test262/ch15/15.2/15.2.3/15.2.3.8/15.2.3.8-2-a-1.js
| Aborted...
| 
| /home/gds/Documents/jscert/src/core/trunk/tests/test262/ch15/15.2/15.2.3/15.2.3.8/15.2.3.8-2-a-1.js:22: ReferenceError: runTestCase is not defined
| 
| /home/gds/Documents/jscert/src/core/trunk/tests/test262/ch15/15.2/15.2.3/15.2.3.8/15.2.3.8-1-2.js
| Aborted...
| 
| /home/gds/Documents/jscert/src/core/trunk/tests/test262/ch15/15.2/15.2.3/15.2.3.8/15.2.3.8-1-2.js:20: ReferenceError: runTestCase is not defined
| 
`----

...we need to define a better test runner for them. Or figure out how to use theirs.

